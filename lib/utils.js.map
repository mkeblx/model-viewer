{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Vector3} from 'three';\n\nimport {HAS_FULLSCREEN_API, HAS_WEBXR_DEVICE_API, HAS_WEBXR_HIT_TEST_API, IS_AR_CANDIDATE} from './constants.js';\n\nexport const deserializeUrl = (url) =>\n    (url != null && url !== 'null') ? toFullUrl(url) : null;\n\nexport const assertIsArCandidate = () => {\n  if (IS_AR_CANDIDATE) {\n    return;\n  }\n\n  const missingApis = [];\n\n  if (!HAS_FULLSCREEN_API) {\n    missingApis.push('Fullscreen API');\n  }\n\n  if (!HAS_WEBXR_DEVICE_API) {\n    missingApis.push('WebXR Device API');\n  }\n\n  if (!HAS_WEBXR_HIT_TEST_API) {\n    missingApis.push('WebXR Hit Test API');\n  }\n\n  throw new Error(\n      `The following APIs are required for AR, but are missing in this browser: ${\n          missingApis.join(', ')}`);\n};\n\n/**\n * Converts a partial URL string to a fully qualified URL string.\n *\n * @param {String} url\n * @return {String}\n */\nexport const toFullUrl = (partialUrl) => {\n  const url = new URL(partialUrl, window.location.toString());\n  return url.toString();\n};\n\n\nexport const debounce = (fn, ms) => {\n  let timer = null;\n\n  return (...args) => {\n    if (timer != null) {\n      self.clearTimeout(timer);\n    }\n\n    timer = self.setTimeout(() => {\n      timer = null;\n      fn(...args);\n    }, ms);\n  };\n};\n\n/**\n * @param {Number} edge\n * @param {Number} value\n * @return {Number} 0 if value is less than edge, otherwise 1\n */\nexport const step = (edge, value) => {\n  return value < edge ? 0 : 1;\n};\n\n/**\n * @param {Number} value\n * @param {Number} lowerLimit\n * @param {Number} upperLimit\n * @return {Number} value clamped within lowerLimit..upperLimit\n */\nexport const clamp = (value, lowerLimit, upperLimit) => Math.max(\n    lowerLimit === -Infinity ? value : lowerLimit,\n    Math.min(upperLimit === Infinity ? value : upperLimit, value));\n\n/**\n * Takes a URL to a USDZ file and sets the appropriate\n * fields so that Safari iOS can intent to their\n * AR Quick Look.\n *\n * @param {String} url\n */\nexport const openIOSARQuickLook = url => {\n  const anchor = document.createElement('a');\n  anchor.setAttribute('rel', 'ar');\n  anchor.setAttribute('href', url);\n  anchor.appendChild(document.createElement('img'));\n  anchor.click();\n};\n\n\n// The DPR we use for a \"capped\" scenario (see resolveDpr below):\nexport const CAPPED_DEVICE_PIXEL_RATIO = 1;\n\n\n/**\n * This helper analyzes the layout of the current page to decide if we should\n * use the natural device pixel ratio, or a capped value.\n *\n * We cap DPR if there is no meta viewport (suggesting that user is not\n * consciously specifying how to scale the viewport relative to the device\n * screen size).\n *\n * The rationale is that this condition typically leads to a pathological\n * outcome on mobile devices. When the window dimensions are scaled up on a\n * device with a high DPR, we create a canvas that is much larger than\n * appropriate to accomodate for the pixel density if we naively use the\n * reported DPR.\n *\n * This value needs to be measured in real time, as device pixel ratio can\n * change over time (e.g., when a user zooms the page). Also, in some cases\n * (such as Firefox on Android), the window's innerWidth is initially reported\n * as the same as the screen's availWidth but changes later.\n *\n * A user who specifies a meta viewport, thereby consciously creating scaling\n * conditions where <model-viewer> is slow, will be encouraged to live their\n * best life.\n */\nexport const resolveDpr = (() => {\n  // If true, implies that the user is conscious of the viewport scaling\n  // relative to the device screen size.\n  const HAS_META_VIEWPORT_TAG = (() => {\n    const metas = document.head != null ?\n        Array.from(document.head.querySelectorAll('meta')) :\n        [];\n\n    for (const meta of metas) {\n      if (meta.name === 'viewport') {\n        return true;\n      }\n    }\n\n    return false;\n  })();\n\n  if (!HAS_META_VIEWPORT_TAG) {\n    console.warn(\n        'No <meta name=\"viewport\"> detected; <model-viewer> will cap pixel density at 1.');\n  }\n\n  return () => HAS_META_VIEWPORT_TAG ? window.devicePixelRatio :\n                                       CAPPED_DEVICE_PIXEL_RATIO;\n})();\n"]}